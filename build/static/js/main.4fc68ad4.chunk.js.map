{"version":3,"sources":["Components/NavBar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","columns","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","newText","split","join","navigator","clipboard","writeText","filter","element","defaultProps","Alert","height","alert","role","msg","App","setMode","setAlert","message","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fc68ad4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input mx-2\"\r\n                type=\"checkbox\"\r\n                onClick={props.toggleMode}\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                DarkMode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  title: \"Logo\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to uppercase!\",\"success\")\r\n  };\r\n  const handleloClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to lowercase!\",\"success\")\r\n  };\r\n  const handleClearClick = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"Cleared successfully!\",\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n\r\n  };\r\n  const handleCopy = () => {\r\n\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied!\",\"success\")\r\n  };\r\n  const handleSpaces=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces removed!\",\"success\")\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor:props.mode==='light'?'white':'black',color:props.mode==='light'?'black':'white'}}\r\n            id=\"MyText\"\r\n            rows=\"4\"\r\n            columns=\"7\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0}\r\n          type=\"button\"\r\n          className=\"btn btn-dark mx-1 my-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Uppercase\r\n        </button>\r\n        <button disabled={text.length===0}\r\n          type=\"button\"\r\n          className=\"btn btn-dark mx-1 my-1\"\r\n          onClick={handleloClick}\r\n        >\r\n          lowercase\r\n        </button>\r\n        <button disabled={text.length===0}\r\n          type=\"button\"\r\n          className=\"btn btn-dark mx-1 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear\r\n        </button> \r\n        <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-1 my-1\" onClick={handleSpaces}>\r\n          Removespaces\r\n        </button>\r\n        <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-1 my-1\" onClick={handleCopy}>\r\n          copy\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-5\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} letters\r\n        </p>\r\n        <p>It will take {0.008 * 60 * text.split().filter((element)=>{return element.length!==0}).length} seconds to read </p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:'Damn! textform is empty'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nfunction Alert(props) {\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Alert;\r\n","//import About from \"./Components/About.js\"\nimport NavBar from \"./Components/NavBar.js\";\nimport TextForm from \"./Components/TextForm.js\";\nimport Alert from \"./Components/Alert.js\";\nimport React, { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1400);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"dark mode activated\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode activated\", \"success\");\n    }\n  };\n  return (\n    <>\n      <NavBar\n        title=\"TextFun\"\n        about=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Try TextFun-Enter text below to analyze\" mode={mode} />\n      </div>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}